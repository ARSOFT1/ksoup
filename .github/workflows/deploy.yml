name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    strategy:
      matrix:
        config: [
          { target: android, os: ubuntu-latest, tasks: androidUnitTest, continueOnError: false },
          { target: apple, os: macos-latest, tasks: iosX64Test iosSimulatorArm64Test macosX64Test macosArm64Test, continueOnError: true },
          # { target: windows, os: windows-latest, tasks: windowsTest, continueOnError: true }, # https://github.com/square/okio/issues/951
          # { target: linux, os: ubuntu-latest, tasks: linuxTest, continueOnError: false },
          { target: desktop, os: ubuntu-latest, tasks: jvmTest, continueOnError: false },
        ]
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.target }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2

      - name: Test ${{ matrix.config.target }} targets
        continue-on-error: ${{ matrix.config.continueOnError }}
        run: ./gradlew ${{ matrix.config.tasks }}

  release:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: macos-latest
    needs:
      - build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup gradle
        uses: gradle/gradle-build-action@v2


      - name: Write secrets to local.properties
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo sonatypeUsername="${SONATYPE_USERNAME}" >> "local.properties"
          echo sonatypePassword="${SONATYPE_PASSWORD}" >> "local.properties"
          echo gpgKeyPassword="${GPG_KEY_PASSWORD}" >> "local.properties"
          echo gpgKeySecret="${GPG_KEY_SECRET}" >> "local.properties"
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_KEY_PASSWORD: ${{ secrets.GPG_KEY_PASSWORD }}
          GPG_KEY_SECRET: ${{ secrets.GPG_KEY_SECRET }}

      - name: Release to sonatype
        run: ./gradlew publishAllPublicationsToMavenRepository
